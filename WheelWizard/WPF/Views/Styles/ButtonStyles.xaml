<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="TopButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TitleTextColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
            
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="SidebarMenuButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundColorV2}"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>
    
    <!-- Default -->
    <SolidColorBrush x:Key="ButtonBackgroundDefault-Default" Color="{StaticResource Gray700}" />
    <SolidColorBrush x:Key="ButtonForegroundDefault-Default" Color="{StaticResource Gray300}" />
    <SolidColorBrush x:Key="ButtonBackgroundDefault-Hover" Color="{StaticResource Gray600}" />
    <SolidColorBrush x:Key="ButtonForegroundDefault-Hover" Color="{StaticResource Gray300}" />
    <SolidColorBrush x:Key="ButtonBackgroundDefault-Pressing" Color="{StaticResource Gray500}" />
    <SolidColorBrush x:Key="ButtonForegroundDefault-Pressing" Color="{StaticResource Gray300}" />
    
    <!-- Primary -->
    <SolidColorBrush x:Key="ButtonBackgroundPrimary-Default" Color="{StaticResource Cyan700}" />
    <SolidColorBrush x:Key="ButtonForegroundPrimary-Default" Color="{StaticResource Gray50}" />
    <SolidColorBrush x:Key="ButtonBackgroundPrimary-Hover" Color="{StaticResource Cyan600}" />
    <SolidColorBrush x:Key="ButtonForegroundPrimary-Hover" Color="{StaticResource Gray50}" />
    <SolidColorBrush x:Key="ButtonBackgroundPrimary-Pressing" Color="{StaticResource Cyan400}" />
    <SolidColorBrush x:Key="ButtonForegroundPrimary-Pressing" Color="{StaticResource Gray50}" />
    
    <!-- Secondary -->
    <SolidColorBrush x:Key="ButtonBackgroundSecondary-Default" Color="{StaticResource Yellow700}" />
    <SolidColorBrush x:Key="ButtonForegroundSecondary-Default" Color="{StaticResource Gray100}" />
    <SolidColorBrush x:Key="ButtonBackgroundSecondary-Hover" Color="{StaticResource Yellow600}" />
    <SolidColorBrush x:Key="ButtonForegroundSecondary-Hover" Color="{StaticResource Gray50}" />
    <SolidColorBrush x:Key="ButtonBackgroundSecondary-Pressing" Color="{StaticResource Yellow500}" />
    <SolidColorBrush x:Key="ButtonForegroundSecondary-Pressing" Color="{StaticResource Gray50}" />
    
    <!-- Danger -->
    <SolidColorBrush x:Key="ButtonBackgroundDanger-Default" Color="{StaticResource Red700}" />
    <SolidColorBrush x:Key="ButtonForegroundDanger-Default" Color="{StaticResource Gray100}" />
    <SolidColorBrush x:Key="ButtonBackgroundDanger-Hover" Color="{StaticResource Red600}" />
    <SolidColorBrush x:Key="ButtonForegroundDanger-Hover" Color="{StaticResource Gray50}" />
    <SolidColorBrush x:Key="ButtonBackgroundDanger-Pressing" Color="{StaticResource Red400}" />
    <SolidColorBrush x:Key="ButtonForegroundDanger-Pressing" Color="{StaticResource Gray50}" />
    
    <!-- Disabled -->
    <SolidColorBrush x:Key="ButtonBackground-Disabled" Color="{StaticResource Gray800}" />
    <SolidColorBrush x:Key="ButtonForeground-Disabled" Color="{StaticResource Gray950}" />
    
    <Style TargetType="Button" x:Key="BaseButtonStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ButtonForeground-Disabled}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackground-Disabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="DefaultButtonStyle" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundDefault-Default}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundDefault-Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundDefault-Hover}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundDefault-Hover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundDefault-Pressing }"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundDefault-Pressing }"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="DangerButtonStyle" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundDanger-Default}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundDanger-Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundDanger-Hover}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundDanger-Hover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundDanger-Pressing }"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundDanger-Pressing }"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="PrimaryButtonStyle" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPrimary-Default}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundPrimary-Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPrimary-Hover}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundPrimary-Hover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundPrimary-Pressing }"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundPrimary-Pressing }"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="SecondaryButtonStyle" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundSecondary-Default}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundSecondary-Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundSecondary-Hover}"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundSecondary-Hover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundSecondary-Pressing }"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundSecondary-Pressing }"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
