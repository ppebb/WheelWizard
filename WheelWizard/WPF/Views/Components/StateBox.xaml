<UserControl x:Class="CT_MKWII.WPF.Views.Components.StateBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:components="clr-namespace:CT_MKWII.WPF.Views.Components"
             mc:Ignorable="d" x:Name="Root" 
             d:DesignHeight="50" d:DesignWidth="70"
             HorizontalAlignment="Left" VerticalAlignment="Top">
             
    <Border CornerRadius="3" Padding="4,3"
            ToolTipService.InitialShowDelay="20"
            ToolTipService.ShowDuration="5000"
            ToolTipService.BetweenShowDelay="0">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Background" Value="{StaticResource StateBoxBackground}" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsDark, ElementName=Root}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource DarkStateBoxBackground}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <components:DynamicIcon Grid.Column="0"
                                    IconPack="{Binding IconPack, ElementName=Root}"
                                    IconKind="{Binding IconKind, ElementName=Root}"
                                    IconSize="{Binding IconSize, ElementName=Root}">
                <components:DynamicIcon.Style>
                    <Style TargetType="components:DynamicIcon">
                        <Setter Property="ForegroundColor" Value="{StaticResource StateBoxIcon-Default}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IconSize, ElementName=Root}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsDark, ElementName=Root}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="ForegroundColor" Value="{StaticResource DarkStateBoxIcon-Default}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Border}}" Value="True" />
                                    <Condition Binding="{Binding IsDark, ElementName=Root}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="ForegroundColor" Value="{StaticResource StateBoxIcon-Hover}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Border}}" Value="True" />
                                    <Condition Binding="{Binding IsDark, ElementName=Root}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="ForegroundColor" Value="{StaticResource DarkStateBoxIcon-Hover}" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </components:DynamicIcon.Style>
            </components:DynamicIcon>

            <Rectangle Grid.Column="1" Width="4">
                <Rectangle.Style>
                    <Style TargetType="Rectangle">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IconSize, ElementName=Root}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>

            <TextBlock Grid.Column="2"
                       Text="{Binding Text, ElementName=Root}"
                       FontSize="{Binding FontSize, ElementName=Root}"
                       FontWeight="Medium" VerticalAlignment="Center">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{StaticResource StateBoxForeground-Default}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDark, ElementName=Root}" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource DarkStateBoxForeground-Default}" />
                            </DataTrigger>
                            
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Border}}" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource StateBoxForeground-Hover}" />
                            </DataTrigger>
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Border}}" Value="True" />
                                    <Condition Binding="{Binding IsDark, ElementName=Root}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="{StaticResource DarkStateBoxForeground-Hover}" />
                            </MultiDataTrigger>
                            
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
        
        <Border.ToolTip>
            <components:ToolTipMessage x:Name="StateBoxToolTip"/>
        </Border.ToolTip>
    </Border>
</UserControl>